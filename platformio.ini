; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[base]
platform = espressif32
framework = arduino
platform_packages = 
    espressif/toolchain-xtensa-esp32@12.2.0+20230208
lib_deps =
    bblanchon/StreamUtils@^1.8.0
    bblanchon/ArduinoJson@^6.21.3
    ESP Async WebServer=https://github.com/quadule/ESPAsyncWebServer.git#431f854fb9dca1442d44fe7c00dd5a1ffe2a6924
    gmag11/ESPNtpClient@^0.2.7
    spotify-esp=https://github.com/cadenmiller/spotify-esp
    JPEGDEC=https://github.com/bitbank2/JPEGDEC
extra_scripts = 
    pre:auto_firmware_version.py

build_type = release
build_flags = 
    -DARDUINO_M5_SERIES                 ; For OpenFontRender
    -DCORE_DEBUG_LEVEL=5
    

    ; -DCONFIG_MBEDTLS_SSL_KEEP_PEER_CERTIFICATE=1
    ; -DCONFIG_MBEDTLS_DYNAMIC_BUFFER=1
    ; -DCONFIG_MBEDTLS_DYNAMIC_FREE_CONFIG_DATA=1
    ; -DCONFIG_MBEDTLS_DYNAMIC_FREE_CA_CERT=1

    ; -DBOARD_HAS_PSRAM                   ; Our board has PSRAM

build_unflags =
    -std=gnu++11
monitor_speed = 115200
monitor_filters =
    default
    esp32_exception_decoder

[env:featheresp32]
extends = base
board = featheresp32
    ; -mfix-esp32-psram-cache-issue
board_build.partitions = ./custom_partitions.csv

[env:adafruit_feather_esp32_v2]
extends = base
board=adafruit_feather_esp32_v2
build_flags =
    -std=gnu++2a
    -DBOARD_HAS_PSRAM
    -DSPOTIFY_PRINT_JSON_PARSE
    -DTALOS_SUPPORT_SPOTIFY_IMAGES
    -DARDUINO_M5_SERIES
    -DCORE_DEBUG_LEVEL=5